apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-flask-deployment
  labels:
    app: hello-flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-flask
  template:
    metadata:
      labels:
        app: hello-flask
    spec:
      containers:
      - image: iml1111/hello_flask
        imagePullPolicy: Always
        name: hello-flask
        resources:
          requests:
            cpu: "100m"
        ports:
        - containerPort: 5000
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
      nodeSelector:
        nodegroup-type: "imeks-dev-frontend"
---
apiVersion: v1
kind: Service
metadata:
  name: hello-flask-nodeport-svc
spec:
  selector:
    app: hello-flask
  type: NodePort
  ports:
   -  protocol: TCP
      nodePort: 30080
      port: 8080
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "hello-flask-ingress"
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: hello-flask-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "hello-flask-nodeport-svc"
                port:
                  number: 8080